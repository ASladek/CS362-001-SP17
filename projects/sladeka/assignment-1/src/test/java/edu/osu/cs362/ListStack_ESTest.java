/*
 * This file was automatically generated by EvoSuite
 * Mon Apr 17 07:53:23 GMT 2017
 */

package edu.osu.cs362;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import edu.osu.cs362.ListStack;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ListStack_ESTest extends ListStack_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ListStack listStack0 = new ListStack();
      listStack0.push((Object) null);
      Object object0 = listStack0.topAndPop();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ListStack listStack0 = new ListStack();
      listStack0.push(listStack0);
      ListStack listStack1 = (ListStack)listStack0.topAndPop();
      assertFalse(listStack1.isEmpty());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ListStack listStack0 = new ListStack();
      boolean boolean0 = listStack0.isEmpty();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ListStack listStack0 = new ListStack();
      Object object0 = new Object();
      listStack0.push(object0);
      boolean boolean0 = listStack0.isEmpty();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ListStack listStack0 = new ListStack();
      listStack0.push(listStack0);
      // Undeclared exception!
      try { 
        listStack0.top();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // ListStack top
         //
         assertThrownBy("edu.osu.cs362.ListStack", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ListStack listStack0 = new ListStack();
      // Undeclared exception!
      try { 
        listStack0.top();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("edu.osu.cs362.ListStack", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ListStack listStack0 = new ListStack();
      listStack0.pop();
      assertFalse(listStack0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ListStack listStack0 = new ListStack();
      listStack0.push(listStack0);
      // Undeclared exception!
      try { 
        listStack0.pop();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // ListStack pop
         //
         assertThrownBy("edu.osu.cs362.ListStack", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      ListStack listStack0 = new ListStack();
      listStack0.makeEmpty();
      assertFalse(listStack0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      ListStack listStack0 = new ListStack();
      // Undeclared exception!
      try { 
        listStack0.topAndPop();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("edu.osu.cs362.ListStack", e);
      }
  }
}
